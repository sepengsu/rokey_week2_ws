'''
시나리오 
중간에 끝나면 다시 task 진행 
기초 task는 point_to_point으로 사용  
또한 point는 index를 이용하여 구현 
'''
def grip():
    set_digital_output(1,ON)
    set_digital_output(2,OFF)
    suc = wait_digital_input(1,ON,timeout = 5)
    if suc ==-1:
        exit()
    
def ungrip():
    set_digital_output(1,OFF)
    set_digital_output(2,ON)
    wait_digital_input(2,ON)
 
def ungrip_waste():
    if get_digital_input(1)==ON:
        up_z()
        movel(posx(631.87, 3.41, 65.43, 79.78, -174.94, 81),vel=30,acc=30) # 버리는 위치의 위 좌표 
        ungrip()
        movej(posj(0,0,90,0,90,0),vel=20,acc=30)
        return True
    else:
        return False
        
def up_z():
    pos = get_current_posx(ref=DR_BASE)[0]
    if pos[2] >150:
        return 
    z_detla = [0,0,100,0,0,0]
    movel(trans(pos,z_detla),vel=30,acc=30)
    
    
    
def point_to_point(pos1,pos2):
    '''
     두 그리드의 위치를 방아 다음과 같은 실행 진행
    1. point1에서 z+100인 곳으로 이용(moveL)
    2. point1로 z 축 이동 (moveL)
    3. ungrip
    4. grip
    5. point1에서 z+100인 곳으로 이동 (moveL)
    6. point2에서 z+100인 곳으로 이동 (moveL)
    6. point2으로 이동 (힘 제어도 포함???)
    7. ungrip 
    8. point2에서 z+100인 곳으로 이동 
    '''
    z_detla = [0,0,80,0,0,0]
    vel = 80
    pos1_zup = trans(pos1,z_detla)
    pos2_zup = trans(pos2,z_detla)
    movel(pos1_zup,vel=vel,acc=30)
    movel(pos1,vel=vel,acc=30)
    grip()
    wait(0.5)
    movel(pos1_zup,vel=vel,acc=30)
    movel(pos2_zup,vel=vel,acc=30)
    movel(pos2,vel=10,acc=30)
    wait(0.3)
    ungrip()
par1 = []    
par1.append(posx(500.88, 97.32, 30.05, 12.01, -180, 11.05))
par1.append(posx(397.64, 97.32, 30.05, 15.92, -180, 14.64))
par1.append(posx(397.6S4, -5.2,  30.05, 23.5, -180, 22.31))
par1.append(posx(500.88, -5.2,  30.05, 23.5, -180, 22.31))
par2 = []
par2.append(posx(499.88, -52.68, 27.85, 43.86, -180, 42.97))
par2.append(posx(398.29, -52.68, 27.85, 43.86, -180, 42.97))
par2.append(posx(398.29, -155.8, 27.85, 43.86, -180, 42.97))
par2.append(posx(499.88, -155.8, 27.85, 43.86, -180, 42.97))

total_count =9
row = 3
col  =3
stack = 1
thickness = 0
direction = 0
point_offset = [0,0,0]
if get_digital_input(2)==ON:
    movej(posj(0,0,90,0,90,0),vel=20,acc=20)
while index<9 and forward==False:
    isgrip = ungrip_waste() # 잡고 있는지 확인하기
    if isgrip== True:
        index+=1
        continue
    ungrip() # 이상하게 안들고 잡고 있는지 확인
    up_z()
    init_pos = get_pattern_point(par1[0],par1[1],par1[2],par1[3],index,
    direction, row, col, stack, thickness, point_offset)
    de_pos = get_pattern_point(par2[0],par2[1],par2[2],par2[3],index,
    direction, row, col, stack, thickness, point_offset)
    point_to_point(init_pos,de_pos)
    index+=1

#index = 0
forward=True
while index<9 and forward==True:
    isgrip = ungrip_waste() # 잡고 있는지 확인하기
    if isgrip== True:
        index+=1
        continue
    ungrip() # 이상하게 안들고 잡고 있는지 확인
    up_z()
    init_pos = get_pattern_point(par1[0],par1[1],par1[2],par1[3],index,
    direction, row, col, stack, thickness, point_offset)
    de_pos = get_pattern_point(par2[0],par2[1],par2[2],par2[3],index,
    direction, row, col, stack, thickness, point_offset)
    point_to_point(de_pos,init_pos)
    index+=1
